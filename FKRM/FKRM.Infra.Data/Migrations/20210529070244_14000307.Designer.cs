// <auto-generated />
using System;
using FKRM.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FKRM.Infra.Data.Migrations
{
    [DbContext(typeof(SchoolDBContext))]
    [Migration("20210529070244_14000307")]
    partial class _14000307
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FKRM.Domain.Entities.AcademicCalendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcademicQuarter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AcademicYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AcademicCalendars");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af6c38d9-b502-47a1-ab9a-26d872b1fa51"),
                            AcademicQuarter = "ضمن سال",
                            AcademicYear = "99-1400",
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(4400),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1e90b7e2-ddfc-46e8-98c2-92ea5bb63bb4"),
                            AcademicQuarter = "ضمن سال",
                            AcademicYear = "1400-99",
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(5471),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.AcademicDegree", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AcademicDegrees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("24ff36db-16cb-4ced-b896-2440e4e5b3bc"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(1341),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "زیر دیپلم"
                        },
                        new
                        {
                            Id = new Guid("a545012d-a63c-4cc7-b02d-8d2a0830a86b"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(1847),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "دیپلم"
                        },
                        new
                        {
                            Id = new Guid("0b39b879-b4de-4494-a96b-5d0b90c60797"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(1877),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "کاردانی"
                        },
                        new
                        {
                            Id = new Guid("2210e675-cba5-4c18-b328-6d3cd380ee33"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(1891),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "کارشناسی"
                        },
                        new
                        {
                            Id = new Guid("6adca930-06d0-4c77-be73-26fcfc9a4161"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(1904),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "کارشناسی ارشد"
                        },
                        new
                        {
                            Id = new Guid("c4026b08-2fc8-4815-a3b6-032a72b29815"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(1917),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "دکترا"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.AcademicMajor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AcademicMajors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b842e627-7f7b-49b5-a4d5-af7cf983fdc6"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(2602),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی شهرسازی"
                        },
                        new
                        {
                            Id = new Guid("559ebfcb-cee9-4cb6-8a1a-e7e52a1f234c"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3085),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "علوم كامپیوتر"
                        },
                        new
                        {
                            Id = new Guid("1ccb8411-afe5-420a-82a8-a5c79ff2dcd9"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3113),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی معماری"
                        },
                        new
                        {
                            Id = new Guid("b71acc43-1a6f-4aad-a1a5-f39c6604ba12"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3146),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "حسابداری"
                        },
                        new
                        {
                            Id = new Guid("9d3a0faf-8a76-4c97-992c-a25f7f916e7f"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3160),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "زبان و ادبیات فارسی"
                        },
                        new
                        {
                            Id = new Guid("cbeca3f2-04cb-4340-91c1-210dc163f028"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3172),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی نفت"
                        },
                        new
                        {
                            Id = new Guid("e94f842f-d10c-46c0-bd6d-63952b5de5b8"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3185),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی شیمی"
                        },
                        new
                        {
                            Id = new Guid("0482655b-335d-49c7-8f7c-70809931c899"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3199),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی صنایع"
                        },
                        new
                        {
                            Id = new Guid("f56722b1-77fe-4b21-9ae4-37898932bd9f"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3212),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی مکانیک"
                        },
                        new
                        {
                            Id = new Guid("8aa73822-b100-4b1c-a263-5e9379c90c00"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3225),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "بیوتکنولوژی"
                        },
                        new
                        {
                            Id = new Guid("4cb47565-2b49-408a-a8db-bb56dd2f4381"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3238),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "زیست‌فناوری"
                        },
                        new
                        {
                            Id = new Guid("d8dc5a91-3607-4dab-b1f3-91c004d2b9f4"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3265),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "نانوشیمی"
                        },
                        new
                        {
                            Id = new Guid("dd5f8a55-18b5-4574-b31b-0ec6b8449bf6"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3278),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "کارآفرینی"
                        },
                        new
                        {
                            Id = new Guid("edac3087-37fe-4012-94a8-57f5cb43d50c"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3291),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مدیریت دولتی"
                        },
                        new
                        {
                            Id = new Guid("1d1a70d2-3b14-44dd-907b-e7e37bf33170"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3304),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مدیریت فناوری اطلاعات"
                        },
                        new
                        {
                            Id = new Guid("9e2065bf-d974-4712-a927-e509ee72c5e0"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3317),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مدیریت آموزشی"
                        },
                        new
                        {
                            Id = new Guid("defd340e-4126-4384-9586-4acbef8fd16b"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3330),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مدیریت بازرگانی"
                        },
                        new
                        {
                            Id = new Guid("676b9ae9-f16c-4732-abca-897522faef7c"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3342),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی معماری"
                        },
                        new
                        {
                            Id = new Guid("6ca57202-a95a-46e4-93d7-fac424f1e0b7"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3486),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "معماری"
                        },
                        new
                        {
                            Id = new Guid("4d6cb932-5642-4fa6-94f3-16b1d4dd6478"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3515),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "معماری داخلی"
                        },
                        new
                        {
                            Id = new Guid("b1cff67c-2100-4e93-be03-064a3c492508"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3528),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "فناوری نانو"
                        },
                        new
                        {
                            Id = new Guid("d34df692-18ac-4de6-9903-0bd9b1de2a49"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3541),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی برق"
                        },
                        new
                        {
                            Id = new Guid("2d2cb090-bb08-4bf6-b02e-55a4f2a4fe4f"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3553),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی پزشکی"
                        },
                        new
                        {
                            Id = new Guid("5ac8c69b-de7c-4457-b48b-178eecc549a9"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3566),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی فناوری اطلاعات"
                        },
                        new
                        {
                            Id = new Guid("415641a8-062d-41d7-9302-8e3fa9448eae"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3579),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی عمران"
                        },
                        new
                        {
                            Id = new Guid("9318b539-8f2a-419f-ba68-325f6ca0e5f8"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3592),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی مواد"
                        },
                        new
                        {
                            Id = new Guid("7cb0e290-4d98-44ce-8782-755fcef2134e"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3605),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی متالورژی و مواد"
                        },
                        new
                        {
                            Id = new Guid("50eebb6c-bf78-4299-a943-9d849bfa37d8"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3631),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "عکاسی"
                        },
                        new
                        {
                            Id = new Guid("6631f747-1493-4794-80a4-f47a7230ac7a"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3644),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "هنرهای تجسمی"
                        },
                        new
                        {
                            Id = new Guid("5a3ed057-fc12-42e1-b811-25fb573e99ee"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3657),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "نقاشی"
                        },
                        new
                        {
                            Id = new Guid("4129d304-83e5-439f-9f4c-8eefe0eab484"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(3670),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ارتباط تصویری"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b80e44f7-bb97-4501-b64e-45c793d835df"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 586, DateTimeKind.Local).AddTicks(2499),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "فنی و حرفه ای"
                        },
                        new
                        {
                            Id = new Guid("ebe814c8-de30-4d72-9956-c1d9f0ace80a"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 590, DateTimeKind.Local).AddTicks(5435),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "کاردانش"
                        },
                        new
                        {
                            Id = new Guid("513fda9d-777f-43c3-98aa-093ca948aebc"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 590, DateTimeKind.Local).AddTicks(5509),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "نظری"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<Guid>("GradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MajorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MarkingTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PassMark")
                        .HasColumnType("int");

                    b.Property<int>("PracticalWeeklyHours")
                        .HasColumnType("int");

                    b.Property<int>("TheoreticalWeeklyHours")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("MajorId");

                    b.HasIndex("MarkingTypeId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.District", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Districts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2f08ecba-d38a-44df-9f37-a19629779767"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(2166),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ناحیه 1"
                        },
                        new
                        {
                            Id = new Guid("4ecb374b-04d3-468e-a206-d8534379daa1"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(2733),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ناحیه 2"
                        },
                        new
                        {
                            Id = new Guid("e4d3f774-b6f6-4210-b9f5-3af804a57d09"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(2765),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "آشتیان"
                        },
                        new
                        {
                            Id = new Guid("9ea8af71-c2e8-4f22-a350-aa79b50b28cb"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(2782),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "تفرش"
                        },
                        new
                        {
                            Id = new Guid("5c3670e1-8d23-4586-a1c6-f9444f7124c1"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(2797),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "خمین"
                        },
                        new
                        {
                            Id = new Guid("2d0d7cd7-e6c5-4bb0-abbb-7352d076eb42"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(2810),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "خنداب"
                        },
                        new
                        {
                            Id = new Guid("a058f0d0-b97c-449f-8a85-757b788b58cf"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(2825),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "سربند"
                        },
                        new
                        {
                            Id = new Guid("c1d22f95-b7c6-40e2-bdae-2f7ff7b87686"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(2863),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "کمیجان"
                        },
                        new
                        {
                            Id = new Guid("fe6ac661-a823-40fa-87dd-ac3ff3c9cce0"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(2877),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "دلیجان"
                        },
                        new
                        {
                            Id = new Guid("72b96635-697d-4567-b285-f19b104fc093"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(2889),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "محلات"
                        },
                        new
                        {
                            Id = new Guid("b45fcd9e-71e1-4c3b-8800-3f36fba41182"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(2902),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "شازند"
                        },
                        new
                        {
                            Id = new Guid("455bcd80-e1a5-4a58-a7ec-c3cbf1475ea1"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(2914),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "نوبران"
                        },
                        new
                        {
                            Id = new Guid("0ca80af5-321c-49b3-8a4a-2d1508b6450d"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(2927),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "زرندیه"
                        },
                        new
                        {
                            Id = new Guid("4b0ee5f3-8695-4eaa-ae48-6e159772b442"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(2941),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ساوه"
                        },
                        new
                        {
                            Id = new Guid("391ac1cc-2eec-4997-bd54-1d0caa0af449"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(2954),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "فراهان"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Enrollment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DayOfTheWeek")
                        .HasColumnType("int");

                    b.Property<int>("During")
                        .HasColumnType("int");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StartTime")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkedForId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("WorkedForId");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c3753c4-e760-4765-aa4f-660b19484db9"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(8948),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "هیأت امنایی"
                        },
                        new
                        {
                            Id = new Guid("0fcd68f9-b954-4f4b-9107-2926c731bde0"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(9441),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "شبانه روزی"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Gender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dd225706-a1df-441f-aa00-9d44245d0ffc"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(584),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "زن"
                        },
                        new
                        {
                            Id = new Guid("c859a9c7-58ab-437b-8fba-074a03898a51"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(1275),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مرد"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Grade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cfd885ce-f99f-4bcc-b38a-c4ed46be94c9"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(5098),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "دهم"
                        },
                        new
                        {
                            Id = new Guid("086086bd-cd4b-4342-a132-f85c9c12452d"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(5618),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "یازدهم"
                        },
                        new
                        {
                            Id = new Guid("37bf8064-0633-4615-8cc7-b05607e1c582"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(5648),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "دوازدهم"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.JobTitle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobTitles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e3e7f46c-0e43-407c-b4fd-62b756541d05"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(6367),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "هنرآموز"
                        },
                        new
                        {
                            Id = new Guid("89839636-f103-4d02-8284-fd0f45013411"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(6874),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "استادکار"
                        },
                        new
                        {
                            Id = new Guid("8b8b8289-e394-4b52-a510-8a95dfc00cc8"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(6926),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "مدیر"
                        },
                        new
                        {
                            Id = new Guid("2d712107-227c-421d-8e13-bd51090f15d8"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(6940),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "معاون فنی"
                        },
                        new
                        {
                            Id = new Guid("f64a56eb-9aa2-47cb-9771-9b5b68bd1a59"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(6953),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "معاون آموزشی"
                        },
                        new
                        {
                            Id = new Guid("ef5bc123-8e37-401e-809f-bb0062c0fb65"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(6967),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "انباردار"
                        },
                        new
                        {
                            Id = new Guid("1bf7bdfb-282d-4504-af7b-725887ae1cc3"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(6979),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "سرپرست بخش"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Major", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ComputerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GraduationCredits")
                        .HasColumnType("int");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OptionalElectiveCredit")
                        .HasColumnType("int");

                    b.Property<int>("RequiredCredit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Majors");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.MarkingType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MarkingTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("984f2425-a533-4c14-93bb-3d4098acb9ff"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(3781),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "یک نمره ای"
                        },
                        new
                        {
                            Id = new Guid("f99ff077-b94b-4ac4-b402-1d7ad12f44b0"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(4316),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "دو نمره ای"
                        },
                        new
                        {
                            Id = new Guid("913e7b73-8e2a-4b38-9865-0064df9395f1"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(4348),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "چهار نمره ای"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ParentNotificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentNotificationId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.NotificationRecipient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("NotificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecipientGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecipientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.ToTable("NotificationRecipients");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.OUType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("OUTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("734c5f57-8320-4a48-920b-e850fd171461"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(7676),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "استعدادهای درخشان"
                        },
                        new
                        {
                            Id = new Guid("a2e3a593-436f-4156-9d89-9263e9776ed6"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(8174),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "شاهد"
                        },
                        new
                        {
                            Id = new Guid("5cb8c761-c59e-4f18-9e33-84df2f23f62e"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(8202),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "عادی"
                        },
                        new
                        {
                            Id = new Guid("c763f792-8c3a-4dec-afa8-68a946c4dd34"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(8235),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "عام المنفعه"
                        },
                        new
                        {
                            Id = new Guid("4e70b4b8-6e06-417b-9df9-e4eb6dc5176b"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(8249),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "نمونه دولتی"
                        },
                        new
                        {
                            Id = new Guid("b3f69cf9-c15b-4a9b-8068-0791d3aad0fe"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 592, DateTimeKind.Local).AddTicks(8261),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "وابسته"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.School", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OUTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubsidiaryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("FeatureId");

                    b.HasIndex("GenderId");

                    b.HasIndex("OUTypeId");

                    b.HasIndex("SubsidiaryId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("JobTitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NationalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.StaffEducationalBackground", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AcademicDegreeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AcademicMajorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StaffId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AcademicDegreeId");

                    b.HasIndex("AcademicMajorId");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffEducationalBackgrounds");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.UnitType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("UnitTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2eb04e8f-5c1b-4cb8-b752-2349b830f507"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(158),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "دولتی"
                        },
                        new
                        {
                            Id = new Guid("18000912-941d-4af7-812f-a6e59304c2ac"),
                            AddedDate = new DateTime(2021, 5, 29, 11, 32, 43, 593, DateTimeKind.Local).AddTicks(654),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "غیردولتی"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.WorkedFor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AcademicCalendarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StaffId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AcademicCalendarId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("StaffId");

                    b.ToTable("WorkedFors");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Area", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.Branch", "Branch")
                        .WithMany("Areas")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Course", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.Grade", "Grade")
                        .WithMany("Courses")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.Major", "Major")
                        .WithMany("Courses")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.MarkingType", "MarkingType")
                        .WithMany("Courses")
                        .HasForeignKey("MarkingTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Enrollment", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.WorkedFor", "WorkedFor")
                        .WithMany("Enrollments")
                        .HasForeignKey("WorkedForId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Group", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.Area", "Area")
                        .WithMany("Groups")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Major", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.Group", "Group")
                        .WithMany("Majors")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Notification", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.Notification", "ParentNotification")
                        .WithMany()
                        .HasForeignKey("ParentNotificationId");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.NotificationRecipient", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.Notification", "Notification")
                        .WithMany("NotificationRecipients")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("FKRM.Domain.Entities.School", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.Branch", "Branch")
                        .WithMany("Schools")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.District", "District")
                        .WithMany("Schools")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.Feature", "Feature")
                        .WithMany("Schools")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.Gender", "Gender")
                        .WithMany("Schools")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.OUType", "OUType")
                        .WithMany("Schools")
                        .HasForeignKey("OUTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.School", "Subsidiary")
                        .WithMany()
                        .HasForeignKey("SubsidiaryId");

                    b.HasOne("FKRM.Domain.Entities.UnitType", "UnitType")
                        .WithMany("Schools")
                        .HasForeignKey("UnitTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Staff", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.JobTitle", "JobTitle")
                        .WithMany("Staffs")
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("FKRM.Domain.Entities.StaffEducationalBackground", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.AcademicDegree", "AcademicDegree")
                        .WithMany("staffEducationalBackgrounds")
                        .HasForeignKey("AcademicDegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.AcademicMajor", "AcademicMajor")
                        .WithMany("staffEducationalBackgrounds")
                        .HasForeignKey("AcademicMajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.Staff", "Staff")
                        .WithMany("StaffEducationalBackgrounds")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FKRM.Domain.Entities.WorkedFor", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.AcademicCalendar", "AcademicCalendar")
                        .WithMany("WorkedFors")
                        .HasForeignKey("AcademicCalendarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.School", "School")
                        .WithMany("WorkedFors")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.Staff", "Staff")
                        .WithMany("WorkedFors")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

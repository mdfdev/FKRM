// <auto-generated />
using System;
using FKRM.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FKRM.Infra.Data.Migrations
{
    [DbContext(typeof(SchoolDBContext))]
    [Migration("20210519091115_1400022")]
    partial class _1400022
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FKRM.Domain.Entities.AcademicCalendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcademicQuarter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AcademicYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AcademicCalendars");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e023969-c12e-490d-8fe0-8a2e808ae136"),
                            AcademicQuarter = "ضمن سال",
                            AcademicYear = "99-1400",
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(6300),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4bca8e79-e904-4560-a8e4-51cc655417fb"),
                            AcademicQuarter = "ضمن سال",
                            AcademicYear = "1400-99",
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(7229),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.AcademicDegree", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AcademicDegrees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2dac1281-ec3f-40da-bd2f-64b340af17f5"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(3325),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "زیر دیپلم"
                        },
                        new
                        {
                            Id = new Guid("08e61b73-17ea-4e9c-a929-ba20480d7ff7"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(3826),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "دیپلم"
                        },
                        new
                        {
                            Id = new Guid("c2fc79cd-7c54-48b2-b4e8-dc8e82a3fadd"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(3853),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "کاردانی"
                        },
                        new
                        {
                            Id = new Guid("ba46d1f5-a720-4759-a631-3855a0cd3583"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(3867),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "کارشناسی"
                        },
                        new
                        {
                            Id = new Guid("37ae7e84-fbdc-47ee-a737-67f3cfa92291"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(3900),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "کارشناسی ارشد"
                        },
                        new
                        {
                            Id = new Guid("d28c1064-c003-4e72-943e-7099893fd7c6"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(3914),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "دکترا"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.AcademicMajor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AcademicMajors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("12cf44ee-218f-40b3-95c1-0974912cb7fc"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(4633),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی شهرسازی"
                        },
                        new
                        {
                            Id = new Guid("bb1722d8-709d-4ab7-b773-98e5186cc08f"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5130),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "علوم كامپیوتر"
                        },
                        new
                        {
                            Id = new Guid("ff6cac6a-3dc6-40c4-8daf-2d7b038d6f4f"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5160),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی معماری"
                        },
                        new
                        {
                            Id = new Guid("c1efa639-04e8-490c-8807-8bd164b2ad36"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5174),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "حسابداری"
                        },
                        new
                        {
                            Id = new Guid("08947126-1b12-44f5-9ded-0f222ef67464"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5188),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "زبان و ادبیات فارسی"
                        },
                        new
                        {
                            Id = new Guid("2299186c-7b23-4447-b01d-98183c5649ee"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5201),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی نفت"
                        },
                        new
                        {
                            Id = new Guid("9ce02389-83a3-49d2-80c1-b76e1f59e5fd"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5232),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی شیمی"
                        },
                        new
                        {
                            Id = new Guid("abe390a6-2565-45fe-a169-561d77025236"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5246),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی صنایع"
                        },
                        new
                        {
                            Id = new Guid("e9d53532-3cc0-4199-b02b-7ef2ad7b25bf"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5260),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی مکانیک"
                        },
                        new
                        {
                            Id = new Guid("e2cb3c48-04c9-4c6b-83f0-29443aabdc43"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5273),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "بیوتکنولوژی"
                        },
                        new
                        {
                            Id = new Guid("290392c8-41a4-48d8-800b-511c20311a17"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5287),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "زیست‌فناوری"
                        },
                        new
                        {
                            Id = new Guid("c7535d97-60dc-456b-9e43-4b3e23b2ce48"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5301),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "نانوشیمی"
                        },
                        new
                        {
                            Id = new Guid("e74c9549-a0c9-4cc3-8185-a46b6c9980db"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5314),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "کارآفرینی"
                        },
                        new
                        {
                            Id = new Guid("723b7fc6-0316-45dc-8148-74c7bc12d5e0"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5328),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مدیریت دولتی"
                        },
                        new
                        {
                            Id = new Guid("02a1b97a-ed00-4ebf-82d9-88cf626098ce"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5355),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مدیریت فناوری اطلاعات"
                        },
                        new
                        {
                            Id = new Guid("896b2d25-1490-4572-aada-824d68966f77"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5368),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مدیریت آموزشی"
                        },
                        new
                        {
                            Id = new Guid("ab8e6929-fa3a-487f-bf8e-0d26ada4e8d8"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5381),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مدیریت بازرگانی"
                        },
                        new
                        {
                            Id = new Guid("b7b60c4d-a4c6-40d8-9903-6ff51f1310c7"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5393),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی معماری"
                        },
                        new
                        {
                            Id = new Guid("89f93d2e-55c0-47ec-b3a7-89b81b0630c0"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5406),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "معماری"
                        },
                        new
                        {
                            Id = new Guid("c0a41281-b4b1-4e3d-a739-bc1ee3521534"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5419),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "معماری داخلی"
                        },
                        new
                        {
                            Id = new Guid("838f907f-fabe-4cb1-a2e9-c45dde98f6a9"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5431),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "فناوری نانو"
                        },
                        new
                        {
                            Id = new Guid("8b1f1fbc-9e68-43fc-8e24-b66e9d6c2346"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5444),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی برق"
                        },
                        new
                        {
                            Id = new Guid("04a9fd03-a373-4235-84e8-d9b5e8bcc7f7"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5470),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی پزشکی"
                        },
                        new
                        {
                            Id = new Guid("d41f615d-c01e-43ad-ba1e-c2616b14fb63"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5483),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی فناوری اطلاعات"
                        },
                        new
                        {
                            Id = new Guid("d256c9b2-b7ee-4891-9091-c9567f9f21d1"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5496),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی عمران"
                        },
                        new
                        {
                            Id = new Guid("8ed810b2-0194-4317-9779-11eef926c6f7"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5510),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی مواد"
                        },
                        new
                        {
                            Id = new Guid("2601589d-a36b-4f96-9953-ddf8468f1255"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5522),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مهندسی متالورژی و مواد"
                        },
                        new
                        {
                            Id = new Guid("c61454c5-6dc7-45e7-a529-97852ee854cf"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5535),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "عکاسی"
                        },
                        new
                        {
                            Id = new Guid("c7fd5e7b-bb15-433d-8a2a-f15b0ea9d29c"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5548),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "هنرهای تجسمی"
                        },
                        new
                        {
                            Id = new Guid("06d94a44-1bb7-43a2-8304-3216ef0a8de5"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5561),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "نقاشی"
                        },
                        new
                        {
                            Id = new Guid("a466ffa5-fe97-4790-8a32-c6b29bf7f8b5"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(5587),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ارتباط تصویری"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e360b088-509c-4cfe-b2b2-4e702e037942"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 190, DateTimeKind.Local).AddTicks(4773),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "فنی و حرفه ای"
                        },
                        new
                        {
                            Id = new Guid("9d44a511-4591-4c85-885e-4908bf79f550"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 193, DateTimeKind.Local).AddTicks(8443),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "کاردانش"
                        },
                        new
                        {
                            Id = new Guid("63348c4c-5f4a-42ed-99a3-3dde1345fb85"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 193, DateTimeKind.Local).AddTicks(8506),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "نظری"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<Guid>("GradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MajorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MarkingTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PassMark")
                        .HasColumnType("int");

                    b.Property<int>("PracticalWeeklyHours")
                        .HasColumnType("int");

                    b.Property<int>("TheoreticalWeeklyHours")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("MajorId");

                    b.HasIndex("MarkingTypeId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.District", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Districts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e3f1a4fc-f1bd-451f-8c6c-43fadefad80b"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(3702),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ناحیه 1"
                        },
                        new
                        {
                            Id = new Guid("333ab799-531b-4df3-be73-a5bb1d7b93cf"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(4444),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ناحیه 2"
                        },
                        new
                        {
                            Id = new Guid("aaa36b5b-a27b-4e39-898c-1a96ddf876b8"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(4512),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "آشتیان"
                        },
                        new
                        {
                            Id = new Guid("8efd621b-4f92-4880-be94-cbfec4b0ac84"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(4527),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "تفرش"
                        },
                        new
                        {
                            Id = new Guid("5a9591c1-c40f-4bc8-bca8-c715fa72e502"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(4541),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "خمین"
                        },
                        new
                        {
                            Id = new Guid("48c9ad45-c315-4b53-ae0d-741a704e9403"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(4554),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "خنداب"
                        },
                        new
                        {
                            Id = new Guid("4c94d093-ed06-40e2-8d2b-e2bd3531d288"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(4567),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "سربند"
                        },
                        new
                        {
                            Id = new Guid("29c29d38-578b-4b88-81f3-c7acd1051ca3"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(4581),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "کمیجان"
                        },
                        new
                        {
                            Id = new Guid("346dde6a-f131-4749-8323-84ac9aa666f2"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(4594),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "دلیجان"
                        },
                        new
                        {
                            Id = new Guid("89b049e0-20e7-42fd-8297-a04f50b0c1d9"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(4607),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "محلات"
                        },
                        new
                        {
                            Id = new Guid("37594e6c-7f8a-4695-8635-c07d0ba2e696"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(4634),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "شازند"
                        },
                        new
                        {
                            Id = new Guid("0eec2fb5-fa09-4298-a4fc-119bfdb529d9"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(4647),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "نوبران"
                        },
                        new
                        {
                            Id = new Guid("9317c6c1-eb53-4513-b434-2130aa2e3381"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(4660),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "زرندیه"
                        },
                        new
                        {
                            Id = new Guid("02eb9329-8813-41f5-95f1-fbf472786c06"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(4673),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ساوه"
                        },
                        new
                        {
                            Id = new Guid("bbe3a395-c4fe-4991-81c6-6d45b9eb6c13"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(4686),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "فراهان"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Enrollment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DayOfTheWeek")
                        .HasColumnType("int");

                    b.Property<int>("During")
                        .HasColumnType("int");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StartTime")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkedForId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("WorkedForId");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e4091bed-8a79-46b4-b054-3be9b170cc71"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(678),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "هیأت امنایی"
                        },
                        new
                        {
                            Id = new Guid("dda9eedb-3c37-4cd4-86d1-369959295e70"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(1183),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "شبانه روزی"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Gender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("42232a37-3dbd-49f3-9572-f149d8ebbfba"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(2264),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "زن"
                        },
                        new
                        {
                            Id = new Guid("a628cd1f-1360-411f-94b5-ea8d1af3a7c3"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(2891),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مرد"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Grade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f09cca12-76eb-4766-a144-d7a0eee02a5e"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(6771),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "دهم"
                        },
                        new
                        {
                            Id = new Guid("8c73ebab-ae10-4262-969b-028427680a38"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(7300),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "یازدهم"
                        },
                        new
                        {
                            Id = new Guid("3113f870-91dc-49fa-84f0-f30161176061"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(7330),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "دوازدهم"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.JobTitle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobTitles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("77bb823c-9d69-4be7-8799-17599838ac53"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(8044),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "هنرآموز"
                        },
                        new
                        {
                            Id = new Guid("bfc13661-2958-4813-9666-17152e621273"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(8565),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "استادکار"
                        },
                        new
                        {
                            Id = new Guid("8dbcdd47-7112-4d7b-8081-e219562a0730"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(8595),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "مدیر"
                        },
                        new
                        {
                            Id = new Guid("153cc9bc-ed8c-483d-975d-fca2fc387eb8"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(8609),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "معاون فنی"
                        },
                        new
                        {
                            Id = new Guid("0441dcaa-9038-49e4-a920-90b03430ea72"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(8622),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "معاون آموزشی"
                        },
                        new
                        {
                            Id = new Guid("2ad5496a-d1c6-4ccb-8236-a419880295fe"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(8654),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "انباردار"
                        },
                        new
                        {
                            Id = new Guid("01977506-c9f1-4bcc-bdc9-8db6349f267e"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(8669),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "سرپرست بخش"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Major", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ComputerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GraduationCredits")
                        .HasColumnType("int");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OptionalElectiveCredit")
                        .HasColumnType("int");

                    b.Property<int>("RequiredCredit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Majors");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.MarkingType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MarkingTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("15ef34be-fac5-469a-9a48-cf09ae8626ec"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(5460),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "یک نمره ای"
                        },
                        new
                        {
                            Id = new Guid("ca8182b7-96c2-4852-8f1e-2a0b04aa4fee"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(6004),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "دو نمره ای"
                        },
                        new
                        {
                            Id = new Guid("54de46ca-9a1e-4521-a38b-076c8521cc82"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(6032),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "چهار نمره ای"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.OUType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("OUTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("196b3413-dcd2-45e4-b68e-474303f758f3"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(9378),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "استعدادهای درخشان"
                        },
                        new
                        {
                            Id = new Guid("007ee8af-87df-4446-b023-79fb6a50dae6"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(9885),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "شاهد"
                        },
                        new
                        {
                            Id = new Guid("12a67618-6c3e-448c-9b8c-4cd1a2c1fb4f"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(9914),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "عادی"
                        },
                        new
                        {
                            Id = new Guid("4edee1a3-28ae-41d5-b170-9abd234605d8"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(9930),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "عام المنفعه"
                        },
                        new
                        {
                            Id = new Guid("15d49346-84ae-467d-8df3-d5f69697b9bc"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(9943),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "نمونه دولتی"
                        },
                        new
                        {
                            Id = new Guid("280b6159-60d1-439c-b52c-a499a57e7e9f"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 195, DateTimeKind.Local).AddTicks(9957),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "وابسته"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.School", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OUTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubsidiaryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("FeatureId");

                    b.HasIndex("GenderId");

                    b.HasIndex("OUTypeId");

                    b.HasIndex("SubsidiaryId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("JobTitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NationalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.StaffEducationalBackground", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AcademicDegreeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AcademicMajorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StaffId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AcademicDegreeId");

                    b.HasIndex("AcademicMajorId");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffEducationalBackgrounds");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.UnitType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("UnitTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("faecb50b-5ff9-402d-b62b-fa2275397690"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(2019),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "دولتی"
                        },
                        new
                        {
                            Id = new Guid("eca49ac3-ad3f-422e-beba-94b84867a7ce"),
                            AddedDate = new DateTime(2021, 5, 19, 13, 41, 15, 196, DateTimeKind.Local).AddTicks(2533),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "غیردولتی"
                        });
                });

            modelBuilder.Entity("FKRM.Domain.Entities.WorkedFor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AcademicCalendarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StaffId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AcademicCalendarId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("StaffId");

                    b.ToTable("WorkedFors");
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Area", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.Branch", "Branch")
                        .WithMany("Areas")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Course", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.Grade", "Grade")
                        .WithMany("Courses")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.Major", "Major")
                        .WithMany("Courses")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.MarkingType", "MarkingType")
                        .WithMany("Courses")
                        .HasForeignKey("MarkingTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Enrollment", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.WorkedFor", "WorkedFor")
                        .WithMany("Enrollments")
                        .HasForeignKey("WorkedForId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Group", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.Area", "Area")
                        .WithMany("Groups")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Major", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.Group", "Group")
                        .WithMany("Majors")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("FKRM.Domain.Entities.School", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.Branch", "Branch")
                        .WithMany("Schools")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.District", "District")
                        .WithMany("Schools")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.Feature", "Feature")
                        .WithMany("Schools")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.Gender", "Gender")
                        .WithMany("Schools")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.OUType", "OUType")
                        .WithMany("Schools")
                        .HasForeignKey("OUTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.School", "Subsidiary")
                        .WithMany()
                        .HasForeignKey("SubsidiaryId");

                    b.HasOne("FKRM.Domain.Entities.UnitType", "UnitType")
                        .WithMany("Schools")
                        .HasForeignKey("UnitTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("FKRM.Domain.Entities.Staff", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.JobTitle", "JobTitle")
                        .WithMany("Staffs")
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("FKRM.Domain.Entities.StaffEducationalBackground", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.AcademicDegree", "AcademicDegree")
                        .WithMany("staffEducationalBackgrounds")
                        .HasForeignKey("AcademicDegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.AcademicMajor", "AcademicMajor")
                        .WithMany("staffEducationalBackgrounds")
                        .HasForeignKey("AcademicMajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.Staff", "Staff")
                        .WithMany("StaffEducationalBackgrounds")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FKRM.Domain.Entities.WorkedFor", b =>
                {
                    b.HasOne("FKRM.Domain.Entities.AcademicCalendar", "AcademicCalendar")
                        .WithMany("WorkedFors")
                        .HasForeignKey("AcademicCalendarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.School", "School")
                        .WithMany("WorkedFors")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FKRM.Domain.Entities.Staff", "Staff")
                        .WithMany("WorkedFors")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
